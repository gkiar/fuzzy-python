name: Docker build and push

on:
  push:
    branches: ['*']
  pull_request_target:
    types: [opened, edited, synchronize, assigned]

jobs:
  lapack:
    runs-on: ubuntu-20.04
    env:
      DOCKER_IMAGE: verificarlo/fuzzy:v0.4.1-lapack
      DOCKER_FILE: ./docker/base/Dockerfile.ubuntu20.04-lapack
      PUSH: false
    steps:
      - name: Set variables
        run: |
          if ([ "${{github.event_name}}" == "push" ] && [ "${{github.ref}}" == "refs/heads/master" ])
          then
              echo is a push to master: push
              echo "PUSH=true" >> "$GITHUB_ENV"
          else
              echo is a PR or non-master branch: do not push
              echo "PUSH=false" >> "$GITHUB_ENV"
          fi
      - name: echo var
        run: echo ${{env.PUSH}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Check for Dockerfile changes
        uses: jitterbit/get-changed-files@v1
        id: changes
      - name: Print changed files
        run: echo ${{ steps.changes.outputs.all }}
      - name: Cancel upstream jobs
        if: contains(steps.changes.outputs.all, 'docker')
        uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
#           restore-keys: |
#            ${{ runner.os }}-buildx-
      - name: Build and push
        if: contains(steps.changes.outputs.all, 'docker')
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ${{ env.DOCKER_FILE }}
          tags: ${{ env.DOCKER_IMAGE }} 
          push: ${{ env.PUSH }}
#          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Image digest
        if: contains(steps.changes.outputs.all, 'Dockerfile')
        run: echo ${{ steps.docker_build.outputs.digest }}

  libmath:
    runs-on: ubuntu-20.04
    env:
      DOCKER_IMAGE: verificarlo/fuzzy:v0.4.1-libmath
      DOCKER_FILE: ./docker/base/Dockerfile.ubuntu20.04-libmath
      PUSH: false
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Check for Dockerfile changes
        uses: jitterbit/get-changed-files@v1
        id: changes
      - name: Print changed files
        run: echo ${{ steps.changes.outputs.all }}
      - name: Cancel upstream jobs
        if: contains(steps.changes.outputs.all, 'Dockerfile')
        uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}
      - name: Build and push
        if: contains(steps.changes.outputs.all, 'Dockerfile')
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ${{ env.DOCKER_FILE }}
          tags: ${{ env.DOCKER_IMAGE }} 
          push: ${{ env.PUSH }}
          cache-from: ${{ env.DOCKER_IMAGE }}
      - name: Image digest
        if: contains(steps.changes.outputs.all, 'Dockerfile')
        run: echo ${{ steps.docker_build.outputs.digest }}

  python:
    needs: lapack
    runs-on: ubuntu-20.04
    env:
      DOCKER_IMAGE: verificarlo/fuzzy:v0.4.1-lapack-python3.8.5
      DOCKER_FILE: ./docker/level1/Dockerfile.ubuntu20.04-python
      PUSH: false
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Check for Dockerfile changes
        uses: jitterbit/get-changed-files@v1
        id: changes
      - name: Build and push
        if: contains(steps.changes.outputs.all, 'Dockerfile')
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ${{ env.DOCKER_FILE }}
          tags: ${{ env.DOCKER_IMAGE }} 
          push: ${{ env.PUSH }}
          cache-from: env.DOCKER_IMAGE
      - name: Image digest
        if: contains(steps.changes.outputs.all, 'Dockerfile')
        run: echo ${{ steps.docker_build.outputs.digest }}

  numpy:
    needs: python
    runs-on: ubuntu-20.04
    env:
      DOCKER_IMAGE: verificarlo/fuzzy:v0.4.1-lapack-python3.8.5-numpy
      DOCKER_FILE: ./docker/level2/Dockerfile.ubuntu20.04-python-numpy
      PUSH: false
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Check for Dockerfile changes
        uses: jitterbit/get-changed-files@v1
        id: changes
      - name: Build and push
        if: contains(steps.changes.outputs.all, 'Dockerfile')
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ${{ env.DOCKER_FILE }}
          tags: ${{ env.DOCKER_IMAGE }} 
          push: ${{ env.PUSH }}
          cache-from: env.DOCKER_IMAGE
      - name: Image digest
        if: contains(steps.changes.outputs.all, 'Dockerfile')
        run: echo ${{ steps.docker_build.outputs.digest }}

  scipy:
    needs: numpy
    runs-on: ubuntu-20.04
    env:
      DOCKER_IMAGE: verificarlo/fuzzy:v0.4.1-lapack-python3.8.5-numpy-scipy
      DOCKER_FILE: ./docker/level3/Dockerfile.ubuntu20.04-python-numpy-scipy
      PUSH: false
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Check for Dockerfile changes
        uses: jitterbit/get-changed-files@v1
        id: changes
      - name: Build and push
        if: contains(steps.changes.outputs.all, 'Dockerfile')
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ${{ env.DOCKER_FILE }}
          tags: ${{ env.DOCKER_IMAGE }} 
          push: ${{ env.PUSH }}
          cache-from: env.DOCKER_IMAGE
      - name: Image digest
        if: contains(steps.changes.outputs.all, 'Dockerfile')
        run: echo ${{ steps.docker_build.outputs.digest }}

  sklearn:
    needs: scipy
    runs-on: ubuntu-20.04
    env:
      DOCKER_IMAGE: verificarlo/fuzzy:v0.4.1-lapack-python3.8.5-numpy-scipy-sklearn
      DOCKER_FILE: ./docker/level4/Dockerfile.ubuntu20.04-python-numpy-scipy-sklearn
      PUSH: false
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Check for Dockerfile changes
        uses: jitterbit/get-changed-files@v1
        id: changes
      - name: Build and push
        if: contains(steps.changes.outputs.all, 'Dockerfile')
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ${{ env.DOCKER_FILE }}
          tags: ${{ env.DOCKER_IMAGE }} 
          push: ${{ env.PUSH }}
          cache-from: env.DOCKER_IMAGE
      - name: Image digest
        if: contains(steps.changes.outputs.all, 'Dockerfile')
        run: echo ${{ steps.docker_build.outputs.digest }}

